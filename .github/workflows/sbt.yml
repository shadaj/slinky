name: Slinky CI

on:
  push:
    branches:
      - master
  pull_request:
  release:
    types: [published]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@master
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Style checks
      run: sbt styleCheck
    - name: Install NPM Dependencies
      run: npm install; cd native; npm install; cd ..
    - name: Test with SBT (fastopt)
      run: sbt scalajsReactInterop/test +tests/test +native/test
    - name: Test with SBT (fullopt)
      run: sbt "set Global/scalaJSStage := FullOptStage" scalajsReactInterop/test +tests/test +native/test
  test-windows:
    runs-on: windows-latest
    strategy:
      fail-fast: false

    steps:
      - name: Configure git to disable Windows line feeds
        run: "git config --global core.autocrlf false"
        shell: bash
      - uses: actions/checkout@master
      # Pre-installed SBT on Windows-runner is unstable so use more polished 3rd-party action olafurpg/setup-scala.
      - name: Set up JDK 1.8 and SBT
        uses: olafurpg/setup-scala@v7
        with:
          java-version: 1.8
      - name: Style checks
        run: sbt styleCheck
      - name: Install NPM Dependencies
        run: npm install; cd native; npm install; cd ..
        shell: bash
      - name: Test with SBT (fastopt)
        run: sbt scalajsReactInterop/test +tests/test +native/test
        shell: bash
      - name: Test with SBT (fullopt)
        run: sbt "set Global/scalaJSStage := FullOptStage" scalajsReactInterop/test +tests/test +native/test
        shell: bash
  build-docs:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@master
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Install NPM Dependencies
      run: npm install
    - name: Build Docs Site
      run: sbt docs/fullOptJS::webpack
    - name: Report Bundle Size
      run: export BUNDLESIZE_GITHUB_TOKEN=`echo $BUNDLESIZE_TOKEN | base64 --decode`; npx bundlesize
      env:
        BUNDLESIZE_TOKEN: N2JjZDIxYjA1OGU1YzkwOWVkZWYzOWQ5MWYyZjRhYTgyMzE3MzY3Mgo=
  build-intellij-plugin:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@master
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build IntelliJ Plugin
      run: sbt coreIntellijSupport/updateIntellij coreIntellijSupport/compile
  publish:
    # Currently publication doesn't depend on testing results for Windows platform, since primary developers use Linux,
    # but it may be changed in the future.
    needs: [test, build-docs, build-intellij-plugin]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - run: git fetch --unshallow
    - name: Publish with SBT
      run: export JAVA_OPTS="-Xmx4g" && bash ./publish.sh
      if: github.ref == 'refs/heads/master' || github.event_name == 'release'
      env:
        encrypted_key: ${{ secrets.key }}
        encrypted_iv: ${{ secrets.iv }}
        PGP_PASSPHRASE: ${{ secrets.pgp_passphrase }}
